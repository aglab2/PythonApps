a = 1
a = 1 + 2
0.2 + 0.1 == 0.3 - false
a = '123' равны
a = "123"
a = '''123''' коммент
b = """123""" коммент

используется unicode

s = 'Hello, world!'
s[3] - 2 символ
s[-1] - отсчет ведется с конца
s[30] - исключение по длине

s[3:6] - символы с 3 по 6 не включая 6
s[:6] - первый 6 символов не включая 6
s[5:] - с 5 символа до конца
s[:] - вся строка

s[2:8:2] - шаг
s[8:2:-1] - отрицательный шаг

s[3] = 'a' - нельзя!

len(s) - длина строки - количество символов
s.encode('utf-8') - вызов от строки s, (b'Hello, world!' -  все символы как байт)

s = 'привет, мир!'
b = s.encode() - получится какая-то херь
b.decode('cp1251') - еще какая-то херня из-за кривых кодировок

type(b) - тип объекта
bytearray - массив байтов, можно менять байты

list - список - упорядоченная последовательность 
a = [1,2,'fjbfhkn', [323464]]
len(a) - 4
a[2] 
a[1:3]

a[:] - копия (нехорошо!)

'qwe'+'rty' = 'qwerty'
'qwe''rty' = 'qwerty'
[1,2] + [3,4] = [1,2,3,4]

a.append([1,3,5]) - добавка элемента в список
a.extend([1,4]) - добавка элементов из списка в другой с изменением исходного списка!
a[4][1] - получение элемента

числа - неизменяемые!

(1,2,3) - кортеж, элементы нельзя менять! можно использовать в качестве ключа (словарь)
tuple(a) - перевод в кортеж

d = {1:2, 3:4, 'a':3, 5:"c"} - не обязательно после добавления тот же порядок, словарь
d[3] - получение значения

set() - неупорядоченное множество, разные элементы, неизменяемые объекты
set([1,2,3,4,1,3]) = (1,2,3,4) - порядок неизвестен, элементы разные

l = [0,1,2]
m = [1, l] - [1, [0,1,2]]
l[1] = 10
 - m = [1, [0,10,2]]
 
import copy
copy.deepcopy(m) - хорошее копирование(без ссылок)

if else elif - условная конструкция
if n>3:
    n=0
else:
    n=2

bool()
True False - истина / ложь
and or
!= - не равно

in - находится ли элемент в последовательности
',' in s

for while - циклы

x = 0
while x<5:
    x+=1
    print(x)
//1 2 3 4

for x in range(5):
    print(x)
//0 1 2 3 4

на месте range может быть упордоченный список
l = [1,10,2]
for x in l
    print(x)
//1 10 2

z = zip(1, range(3)) - знаем номер
for x in zip(1, range(3))
    print (x)
    
enumerate - аналогично

for x in range(3):
    print(x)
else: - ветка если пройдено по всем элементам
    print(-x)

break - завершение цикла, в else не зайдем

for k,v in d.items()
    print(k, v) - ключ и значение